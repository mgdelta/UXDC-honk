# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: UXDC_Honk.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='UXDC_Honk.proto',
  package='UXDC.Honk',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0fUXDC_Honk.proto\x12\tUXDC.Honk\"\xb7\x01\n\x0bHONK_Status\x12\x15\n\ralive_counter\x18\x01 \x01(\r\x12\x1d\n\x15hazard_blinker_active\x18\x02 \x01(\x08\x12;\n\x10honk_mode_status\x18\x03 \x01(\x0e\x32!.UXDC.Honk.HONK_Status.eHonk_Mode\"5\n\neHonk_Mode\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07VW_MODE\x10\x01\x12\r\n\tUXDC_MODE\x10\x02\"\xc2\x01\n\x08SetEvent\x12\x37\n\tsendevent\x18\x01 \x01(\x0e\x32$.UXDC.Honk.SetEvent.EventCommandList\"}\n\x10\x45ventCommandList\x12\x08\n\x04NONE\x10\x00\x12\x19\n\x15TOGGLE_HAZARD_BLINKER\x10\x01\x12\x14\n\x10SET_HONK_VW_MODE\x10\x02\x12\x16\n\x12SET_HONK_UXDC_MODE\x10\x03\x12\x16\n\x12HORN_WARNING_CHILD\x10\x04\x62\x06proto3')
)



_HONK_STATUS_EHONK_MODE = _descriptor.EnumDescriptor(
  name='eHonk_Mode',
  full_name='UXDC.Honk.HONK_Status.eHonk_Mode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VW_MODE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UXDC_MODE', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=161,
  serialized_end=214,
)
_sym_db.RegisterEnumDescriptor(_HONK_STATUS_EHONK_MODE)

_SETEVENT_EVENTCOMMANDLIST = _descriptor.EnumDescriptor(
  name='EventCommandList',
  full_name='UXDC.Honk.SetEvent.EventCommandList',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TOGGLE_HAZARD_BLINKER', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_HONK_VW_MODE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_HONK_UXDC_MODE', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HORN_WARNING_CHILD', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=286,
  serialized_end=411,
)
_sym_db.RegisterEnumDescriptor(_SETEVENT_EVENTCOMMANDLIST)


_HONK_STATUS = _descriptor.Descriptor(
  name='HONK_Status',
  full_name='UXDC.Honk.HONK_Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alive_counter', full_name='UXDC.Honk.HONK_Status.alive_counter', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hazard_blinker_active', full_name='UXDC.Honk.HONK_Status.hazard_blinker_active', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='honk_mode_status', full_name='UXDC.Honk.HONK_Status.honk_mode_status', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _HONK_STATUS_EHONK_MODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=31,
  serialized_end=214,
)


_SETEVENT = _descriptor.Descriptor(
  name='SetEvent',
  full_name='UXDC.Honk.SetEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sendevent', full_name='UXDC.Honk.SetEvent.sendevent', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SETEVENT_EVENTCOMMANDLIST,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=217,
  serialized_end=411,
)

_HONK_STATUS.fields_by_name['honk_mode_status'].enum_type = _HONK_STATUS_EHONK_MODE
_HONK_STATUS_EHONK_MODE.containing_type = _HONK_STATUS
_SETEVENT.fields_by_name['sendevent'].enum_type = _SETEVENT_EVENTCOMMANDLIST
_SETEVENT_EVENTCOMMANDLIST.containing_type = _SETEVENT
DESCRIPTOR.message_types_by_name['HONK_Status'] = _HONK_STATUS
DESCRIPTOR.message_types_by_name['SetEvent'] = _SETEVENT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HONK_Status = _reflection.GeneratedProtocolMessageType('HONK_Status', (_message.Message,), dict(
  DESCRIPTOR = _HONK_STATUS,
  __module__ = 'UXDC_Honk_pb2'
  # @@protoc_insertion_point(class_scope:UXDC.Honk.HONK_Status)
  ))
_sym_db.RegisterMessage(HONK_Status)

SetEvent = _reflection.GeneratedProtocolMessageType('SetEvent', (_message.Message,), dict(
  DESCRIPTOR = _SETEVENT,
  __module__ = 'UXDC_Honk_pb2'
  # @@protoc_insertion_point(class_scope:UXDC.Honk.SetEvent)
  ))
_sym_db.RegisterMessage(SetEvent)


# @@protoc_insertion_point(module_scope)
